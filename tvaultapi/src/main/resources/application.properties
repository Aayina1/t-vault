server.port=8080
vault.api.url= http://localhost:8200/v1
server.contextPath=/vault
vault.port=8200
vault.auth.method=userpass
vault.secret.key.whitelistedchars=[^a-z0-9_]

SafesController.getFolders.value=To get list of folders of a Safe
SafesController.getFolders.notes=To get list of folders of a Safe

SafesController.getInfo.value=To get sdb information
SafesController.getInfo.notes=To get sdb information

SafesController.createSafe.value=To create Safe and associate basic policies
SafesController.createSafe.notes=This creates Safe

SafesController.updateSafe.value=To update Safe and its associated users, groups, roles
SafesController.updateSafe.notes=This updates Safe and its associated users, groups, roles

SafesController.deleteSafe.value=To delete Safe and its associated users, groups, roles
SafesController.deleteSafe.notes=This deletes Safe

SafesController.addUserToSafe.value=To add a user to Safe
SafesController.addUserToSafe.notes=This adds a user to Safe

SafesController.removeUserFromSafe.value=To remove a user from Safe
SafesController.removeUserFromSafe.notes=This removes a user from Safe

SafesController.addGroupToSafe.value=To add a group to Safe
SafesController.addGroupToSafe.notes=This adds a group to Safe

SafesController.removeGroupFromSafe.value=To remove a group from Safe
SafesController.removeGroupFromSafe.notes=This removes a group from Safe

SafesController.getSafe.value=To get list of Safes
SafesController.getSafe.notes=This gets the list of Safes

VaultAuthControllerV2.login.value=To login to TVault
VaultAuthControllerV2.login.notes=To login to TVault using an authentication method set in application.properties file

VaultAuthControllerV2.renew.value=To renew a user token
VaultAuthControllerV2.renew.notes=To renew a user token before the expiry

VaultAuthControllerV2.lookup.value=To lookup a user token
VaultAuthControllerV2.lookup.notes=To lookup a details for given user token

VaultAuthControllerV2.revoke.value=To revoke a token
VaultAuthControllerV2.revoke.notes=To revoke the access for a given token

UserPassControllerV2.createUser.value=To create user
UserPassControllerV2.createUser.notes=To create user for use with username/password authentication

UserPassControllerV2.readUser.value=To read user
UserPassControllerV2.readUser.notes=To get user details for a user from username/password authentication

UserPassControllerV2.deleteUser.value=To delete user
UserPassControllerV2.deleteUser.notes=To delete user from username/password authentication

UserPassControllerV2.updatePassword.value=To update user (password)
UserPassControllerV2.updatePassword.notes=To update user (password) for user with username/password authentication

UserPassControllerV2.listUsers.value=To get list of users
UserPassControllerV2.listUsers.notes=To get list of users from username/password authentication

UserPassControllerV2.login.value=To login using userpass authentication
UserPassControllerV2.login.notes=To login a user using username/password with userpass authentication

SysControllerV2.checkVaultHealth.value=To get Vault health
SysControllerV2.checkVaultHealth.notes=To get Vault health

SysControllerV2.unseal.value=To unseal vault
SysControllerV2.unseal.notes=To get Vault health

SysControllerV2.unsealProgress.value=To get unseal progress
SysControllerV2.unsealProgress.notes=To get unseal progress status


AppRoleControllerV2.createAppRole.value=To Create AppRole
AppRoleControllerV2.createAppRole.notes=To Create AppRole

AppRoleControllerV2.associateApprole.value=To associate an AppRole to a Safe
AppRoleControllerV2.associateApprole.notes=To associate an AppRole to a Safe

AppRoleControllerV2.readAppRole.value=To read AppRole
AppRoleControllerV2.readAppRole.notes=To read AppRole

AppRoleControllerV2.readAppRoleRoleId.value=To read AppRole role_id
AppRoleControllerV2.readAppRoleRoleId.notes=To read AppRole role_id

AppRoleControllerV2.deleteAppRole.value=To delete AppRole
AppRoleControllerV2.deleteAppRole.notes=To delete AppRole

AppRoleControllerV2.createsecretId.value=To create secret_id for AppRole
AppRoleControllerV2.createsecretId.notes=To create secret_id for AppRole

AppRoleControllerV2.deleteSecretId.value=To delete secret_id for AppRole
AppRoleControllerV2.deleteSecretId.notes=To delete secret_id for AppRole

AppRoleControllerV2.readSecretId.value=To read AppRole secret_id
AppRoleControllerV2.readSecretId.notes=To read AppRole secret_id

AppRoleControllerV2.login.value=To Login with AppRole using role_id and secret_id
AppRoleControllerV2.login.notes=To Login with AppRole using role_id and secret_id

AccessControllerV2.createPolicy.value=To create policy
AccessControllerV2.createPolicy.notes=To create policy

AccessControllerV2.updatePolicy.value=To update policy
AccessControllerV2.updatePolicy.notes=To update policy

AccessControllerV2.listAllPolices.value=To list all existing policies
AccessControllerV2.listAllPolices.notes=To list all existing policies

AccessControllerV2.getPolicyInfo.value=To get details of a policy
AccessControllerV2.getPolicyInfo.notes=To get details of a policy

AccessControllerV2.deletePolicyInfo.value=To delete a policy
AccessControllerV2.deletePolicyInfo.notes=To delete a policy

AWSAuthControllerV2.authenticateLdap.value=To authenticate using aws ec2 pkcs7 document and app role
AWSAuthControllerV2.authenticateLdap.notes=To authenticate using aws ec2 pkcs7 document and app role

AWSAuthControllerV2.createRole.value=To create an aws app role
AWSAuthControllerV2.createRole.notes=To create an aws app role

AWSAuthControllerV2.updateRole.value=To update an aws app role
AWSAuthControllerV2.updateRole.notes=To update an aws app role

AWSAuthControllerV2.deleteRole.value=To delete an existing role
AWSAuthControllerV2.deleteRole.notes=To delete an existing role

AWSAuthControllerV2.fetchRole.value=To fetch information for an aws approle
AWSAuthControllerV2.fetchRole.notes=To fetch information for an aws approle

AWSAuthControllerV2.listRoles.value=To get list of AWS roles
AWSAuthControllerV2.listRoles.notes=To get list of AWS roles


LDAPAuthControllerV2.authenticateLdap.value=To authenticate against LDAP
LDAPAuthControllerV2.authenticateLdap.notes=To authenticate against LDAP

LDAPAuthControllerV2.configureLdapGroup.value=To configure a LDAP group in vault
LDAPAuthControllerV2.configureLdapGroup.notes=To configure a LDAP group in vault

LDAPAuthControllerV2.listLdapGroups.value=To get all existing LDAP Groups configured in Vault
LDAPAuthControllerV2.listLdapGroups.notes=To get all existing LDAP Groups configured in Vault

LDAPAuthControllerV2.fetchLdapGroup.value=To retrieve LDAP groups
LDAPAuthControllerV2.fetchLdapGroup.notes=To retrieve LDAP groups

LDAPAuthControllerV2.deleteLdapGroup.value=To delete LDAP group
LDAPAuthControllerV2.deleteLdapGroup.notes=To delete LDAP group

LDAPAuthControllerV2.configureLdapUser.value=To configure a LDAP user
LDAPAuthControllerV2.configureLdapUser.notes=To configure a LDAP user

LDAPAuthControllerV2.listLdapUsers.value=To list all configured LDAP Users
LDAPAuthControllerV2.listLdapUsers.notes=To list all configured LDAP Users

LDAPAuthControllerV2.fetchLdapUser.value=To get the details of LDAP User configured in vault
LDAPAuthControllerV2.fetchLdapUser.notes=To get the details of LDAP User configured in vault

LDAPAuthControllerV2.deleteLdapUser.value=To delete a LDAP User
LDAPAuthControllerV2.deleteLdapUser.notes=To delete a LDAP User


SecretControllerV2.readFromVault.value=To read secret from vault
SecretControllerV2.readFromVault.notes=To read secret from vault


SecretControllerV2.write.value=To write secret into vault
SecretControllerV2.write.notes=To write secret into vault

SecretControllerV2.deleteFromVault.value=To delete secret from vault
SecretControllerV2.deleteFromVault.notes=To delete secret from vault

SecretControllerV2.readFromVaultRecursive.value=To read all folders and secrets 
SecretControllerV2.readFromVaultRecursive.notes=To read all folders and secrets 

SecretControllerV2.readFoldersAndSecrets.value=To read folders and secrets for a given folder
SecretControllerV2.readFoldersAndSecrets.notes=To read folders and secrets for a given folder
